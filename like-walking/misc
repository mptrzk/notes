austere

learn to do it right
  1000 streak

comfortable to do stuff right

no backspace

to avoid metricization

just feedback, no incentive other than more stuff to learn

timeout
  punishes sloppiness
  prevents not actually practicing
  suppresses brute force instinct

"lemme fix it real quick"

augmented feedback
  nope

wyżej wała nie podskoczysz

don't put restrictions on the art of practicing

skills
  memory
    reversion
    n-back
  arithmetic
    counting objects
    addition
      n digit
      n number
    append previous
    interleave
    different bases
    subtraction
    multiplication
    decimal point
    fractions
    base conversion
  geometry
    line length
    figure area

stuff like looking for a more convenient way to add 3 digits

only restrict the user to the right results
  entering the correct answer with backspace is not the right result

this stuff is easy to write using as many frameworks/languages as possible
yet it 

no context skills

infinite draggable area?
  too fancy

the more you tweak the experience, the less useful it becomes
  rly?

perfect validation?
  only rejection
    1 and 10 start the same

editor 

backspace vs timeout 

multiple good answers?
  sure

this app doesn't train the ability to self-assess
  or maybe it does by setting high standards for success

I'm better at walking than at breathing

having a record score makes me careful

room to do it meta-wrong
just make a lot of tasks that are mutually confusing

transferability
mutual confusion

provisional skill
  what to watch out for

overlearning
  as I did with my phone PIN?
  that's why you move to another tasks


should I try coding without notes again?
maybe it's good in general to practice doing something without the cool tool I rely on

adding component
deleting component

failure at compression

pushing a branch

first do it slowly enough for certitude
slowly enough to know whether you're going slowly enough
slowly enough to be relaxed
slowly enough to notice getting distracted
slowly enough to let it sink in

and I got to about 1031 and failed to add 8 and 3
thought it was 12
then I made 3 errors almost in a row



==================================================
;PREACT

get signals to work

or write them yourself

checking what actually gets re-rendered

how do hooks even know which function calls them

how are props updated in class components?

children

stuff.id?

lifecycle stuff
  doing it with hooks?

move to frontcomp?

passing description
  a tag?

make a repo for notes?

analyzing htm
  weird template stuff
  read the code
  props without ${}

initializing reducer with props

let's go with tree view first

leaves are collapsible too

tree view
  button and title
  open/closed state
  displays children in a slightly indented div

how inline-block display works anyway?
  like inline, but can set width and stuff?

collapsing clears state


constant init props
  some lifecycle thingy?
  reducer?


==================================================
;MECHANICS

task:
  () => question, validation function

validaiton by:
  reference answer
    only one good answer
  reference answer list
    finitely* many good answers
  validation function
  reference answer and equivalence predicate
    both higher order and stateful
    lousy

answer buffer & key action?

game generation
  problem
    wrestling with props syntax
    not performing unnecessary computation
    optional config
  just pass titles and afns as props
  game as a class component
    this and that, overall ugly
    how about composition?
  component as a method?
  closure around game component
    call that makeGame?
  makeGame that returns a game component
  games generated outside of app component with makeGame or something
  games generated outside of app component with passing props
  task generators separate from game markup

key action

action = {type, value}

==================================================
;TASK EXAMPLES

type a string form memory
count characters
fraction arithmetic
area of an object in an SVG
mean, mode, median
would it be worth it


==================================================
;UI

shaded box
  bit meh, maybe use a proper HSV color picker
underline
  underlined spaces?
  3-layer hack
    yeah!
    make it line independent
    figure out how to remove that +1 hack
    why it is what it is
      inline-block and clicking
      masking and descenders
      nbsp-s
        how about floating div?
  ^^^ onElementUpdate or something?
  version with focus
    revisit
    why doesn't it work

config with error message
  

==================================================
;UNCATEGORIZED

maybe do it the really dumb way before abstracting?

I don't find myself lifting state really
I start with it lifted and move it down when it really gets in the way

wiring, wiring all the wiring

configs seem stupid

there's all this complexity that does nothing
let's wrap it in more complexity

I want it to focus each time it

the most important problem right now is to make it instantiate

"this is more complicated than it should"

why do I need to "useRef"


