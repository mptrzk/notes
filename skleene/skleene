%s/'\([^']*\)',/\1/g

chars just match chars
operators:
  ran (range)
  alt (alternative)
  seq (sequence)
  rep (repetition)
    at-most
    at-least <- maybe do this first as just rep
  not
  end (matches end of string)
  and
    if all exprs match, returns the result of the last one
symbols are user-defined

^^ start and end might be easier to do using indices rather than substrings


on non-matching pattern it either yields or fails

nils get ignored in the final result

oh my god, lisp is clunky!

parenthesis make it so you don't need special rules 

some expressions should match empty strings

let's just check a regex engine

let's start by checking if a s


that multivalued feels hacky
death by commitee 

should "alt" advance stuff?
  naaa
    but what if it's (not (alt ...))?

exact number of reps
min number of reps
max number of reps

not having structs now feels crippling

maybe just whip up python and see how quickly can I do it in it

okay, so how to lex?

is "end" needed for the task?
  if \n is the last char in the file, there's a gap at the end

iwsc?
  inline white space character
    requires and

gap
  leading & trailing whitespace

what's rep 0 0 ?

are the only useful cases for "and" contain "not" clauses before the last one?
  nope, it can be used for peeking as well

repeating "end"
maybe "end" should return None as rst?
chaining with rst from misses looks stupid anyway

'.*' in regex
  .* means "anything other than the next char"
  or is it the next expr?

